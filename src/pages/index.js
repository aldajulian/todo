'use client';
import { useEffect, useState, useRef } from 'react'
import Head from 'next/head'
import Header from '../components/Header'
import Bar from '../components/Bar'
import TodoItem from '../components/TodoItem'

let contentIn, contentEnd;
let example = [
  {id: "asdkfj", name: "Finish Todo App", notes: "Simple, Miminalist, and Zero nonsense task management."},
  {id: "adsfg", name: "Create Adaptasi website", notes: ""},
  {id: "eqwe", name: "Fix mottion site", notes: "Portfolio showcase made by Mottion"}
]

export default function Home() {
  const [dynamicClass, setDynamicClass] = useState([])
  const [dynamicContent, setDynamicContent] = useState([])
  const [todos, setTodos] = useState([])
  const audioElement = useRef();

  const handleMessage = (content) => {
    // if(!dynamicClass.includes('in')){
    setDynamicClass(['in'])

    clearTimeout(contentIn)
    clearTimeout(contentEnd)

    setTimeout(() => {
      if(audioElement.current){
        let audio = audioElement.current
        let isPlaying = audio.currentTime > 0 && !audio.paused && !audio.ended && audio.readyState > audio.HAVE_CURRENT_DATA;

        // audio.pause()
        audio.currentTime = 0;
        audio.volume = 0.2;
        if(!isPlaying){
          audio.play()
        }
      }
    }, 100)

    setTimeout(() => {
      setDynamicClass(['in', 'content-in'])
      setDynamicContent(content)
    }, 250)

    contentIn = setTimeout(() => {
      setDynamicClass(['in'])
    }, 2400)

    contentEnd = setTimeout(() => {
      setDynamicClass([])
    }, 2600)
  }

  // const handleOpen = (item) => {
  //   let newItem = item
  //   newItem.open

  //   setTodos((prevState) => {
  //     [...prevState, item]
  //   })
  // }

  return (
    <>
      <Head>
        <title>Todo</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="main">
        <Header 
          dynamicClass={dynamicClass}
          dynamicContent={dynamicContent}
          handleMessage={handleMessage}
          todos={todos}
        />
        <Bar setTodos={setTodos}/>
        <div>
          {/* <Reorder.Group axis="y" onReorder={setTodos} values={todos} className="todo-list">
            <AnimatePresence> */}
          <ul className="todo-list">
          {todos.map((item) => {

            return (
              <TodoItem item={item} setTodos={setTodos} handleMessage={handleMessage}/>
            )
          })}
          {!todos.length &&
            <div className='placeholder'>
              Your task will be appear here
            </div>
          }
          </ul>
            {/* </AnimatePresence>
          </Reorder.Group> */}
        </div>
        <audio controls src={`default.mp3`} ref={audioElement} className="d-none" allow="autoplay"/>
      </main>
    </>
  )
}
